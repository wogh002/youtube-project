{"version":3,"sources":["components/header/header.module.css","components/video_list/video_list.module.css","components/video_item/video_item.module.css","components/video_detail/video_detail.module.css","components/header/header.jsx","components/video_item/video_item.jsx","components/video_list/video_list.jsx","components/video_detail/video_detail.jsx","app.jsx","service/youtube.js","index.js","app.module.css"],"names":["module","exports","Header","memo","onSearch","inputRef","useRef","resetInput","current","value","focus","className","style","header","fixed","href","headerInfo","menubar","src","logo","alt","title","titleLang","search","input","ref","onKeyPress","event","code","trim","type","placeholder","keyboard","searchBtn","onClick","searchIcon","microphone","info","VideoItems","video","snippet","onSelect","displayType","display","list","grid","thumbnails","medium","url","thumbnail","infoContanier","thumbnailURL","channelThumbnail","channelInfo","channel","channelTitle","VideoList","videos","map","id","VideoDetail","videoContainer","frameBorder","allowFullScreen","youtuber","btn","description","App","youtube","useState","setVideo","selectedVideo","setSelectedVideo","useCallback","item","query","then","getChannelInfo","newVideos","useEffect","getMostPopular","container","detail","Youtube","httpClient","this","a","get","params","part","chart","maxResults","regionCode","response","data","items","q","videoId","thumbnailURLs","i","length","channelId","default","push","Promise","resolve","shift","axios","create","baseURL","key","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0afc2229.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"header_fixed___6VHM\",\"headerInfo\":\"header_headerInfo__39b3E\",\"menubar\":\"header_menubar__2p6yt\",\"logo\":\"header_logo__2b0QN\",\"titleLang\":\"header_titleLang__A_FnT\",\"search\":\"header_search__221Si\",\"input\":\"header_input__10Wp_\",\"keyboard\":\"header_keyboard__1Cu7b\",\"searchBtn\":\"header_searchBtn__2QwqY\",\"searchIcon\":\"header_searchIcon__1Ri7I\",\"microphone\":\"header_microphone__oUCEE\",\"info\":\"header_info__xgEm0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"video_list_list__2l2vJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video\":\"video_item_video__1_FvS\",\"list\":\"video_item_list__3o3rz\",\"grid\":\"video_item_grid__1LNrc\",\"thumbnail\":\"video_item_thumbnail__1jZp4\",\"infoContanier\":\"video_item_infoContanier__21btO\",\"channelThumbnail\":\"video_item_channelThumbnail__gFCte\",\"title\":\"video_item_title__1ScLO\",\"channel\":\"video_item_channel__1eYFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoContainer\":\"video_detail_videoContainer__1mnM-\",\"title\":\"video_detail_title__2Sxg6\",\"channelInfo\":\"video_detail_channelInfo__3bqit\",\"youtuber\":\"video_detail_youtuber__2A0ct\",\"thumbnail\":\"video_detail_thumbnail__bwSpk\",\"channelTitle\":\"video_detail_channelTitle__p47_7\",\"btn\":\"video_detail_btn__10qh5\",\"description\":\"video_detail_description__sFEy7\"};","import React, { useRef, memo } from 'react';\r\nimport style from './header.module.css';\r\nconst Header = memo(({ onSearch }) => {\r\n    const ENTER = 'Enter';\r\n    const inputRef = useRef();\r\n    const resetInput = () => {\r\n        inputRef.current.value = '';\r\n        inputRef.current.focus();\r\n    }\r\n    const onKeyPress = event => {\r\n        if (event.code === ENTER && inputRef.current.value.trim()) {\r\n            onSearch(inputRef.current.value);\r\n            resetInput();\r\n        }\r\n        else if (!inputRef.current.value.trim()) {\r\n            resetInput();\r\n        }\r\n    }\r\n    const onClick = () => {\r\n        if (inputRef.current.value.trim()) {\r\n            onSearch(inputRef.current.value);\r\n            resetInput();\r\n        }\r\n        else {\r\n            resetInput();\r\n        }\r\n    }\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.fixed}>\r\n                <a href=\"./\" className={style.headerInfo}>\r\n                    <span className={style.menubar}>\r\n                        <i className=\"fas fa-bars fa-lg\"></i>\r\n                    </span>\r\n                    <img src=\"./images/logo.png\" className={style.logo} alt=\"logo\"></img>\r\n                    <h1 className={style.title}>YouTube</h1>\r\n                    <span className={style.titleLang}>KR</span>\r\n                </a>\r\n                <div className={style.search}>\r\n                    <input className={style.input} ref={inputRef} onKeyPress={onKeyPress} type=\"text\" placeholder=\"검색\"></input>\r\n                    <button type=\"button\" className={style.keyboard}><i className=\"fas fa-keyboard\"></i></button>\r\n                    <button type=\"button\" className={style.searchBtn} onClick={onClick}>\r\n                        <img className={style.searchIcon} src=\"./images/search.png\" alt=\"search\"></img>\r\n                    </button>\r\n                    <button type=\"button\" className={style.microphone}><i className=\"fas fa-microphone\"></i></button>\r\n                </div>\r\n                <div className={style.info}>\r\n                    <button type=\"button\"><i className=\"fas fa-video\"></i></button>\r\n                    <button type=\"button\"><i className=\"fas fa-ellipsis-v\"></i></button>\r\n                    <button type=\"button\"><i className=\"fas fa-bell\"></i></button>\r\n                    <button type=\"button\"><i className=\"fas fa-circle-notch\"></i></button>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n});\r\nexport default Header;","import React from 'react';\r\nimport style from './video_item.module.css';\r\nconst VideoItems = ({ video, video: { snippet }, onSelect, display }) => {\r\n    const displayType = display === 'list' ? style.list : style.grid;\r\n    return (\r\n        <li className={`${style.video} ${displayType}`} onClick={() => { onSelect(video) }}>\r\n            <img src={snippet.thumbnails.medium.url} className={style.thumbnail} alt=\"thumbnails\" />\r\n            <div className={style.infoContanier}>\r\n                <img src={video.thumbnailURL} className={style.channelThumbnail} alt=\"thumbnail\"></img>\r\n                <div className={style.channelInfo}>\r\n                    <h1 className={style.title}>{snippet.title}</h1>\r\n                    <p className={style.channel}>{snippet.channelTitle}</p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default VideoItems;","import React, { memo } from 'react';\r\nimport VideoItem from '../video_item/video_item';\r\nimport style from './video_list.module.css';\r\nconst VideoList = memo(({ videos, onSelect, display }) => {\r\n    return (\r\n        <ul className={style.list}>\r\n            {\r\n                videos.map(video =>\r\n                    <VideoItem\r\n                        key={video.id}\r\n                        video={video}\r\n                        onSelect={onSelect}\r\n                        display={display}\r\n                    />)\r\n            }\r\n        </ul>\r\n    )\r\n});\r\nexport default VideoList;","import React from 'react';\r\nimport style from './video_detail.module.css';\r\nconst VideoDetail = ({ video }) => {\r\n    \r\n    return (\r\n        <section>\r\n            <div className={style.videoContainer}>\r\n                <iframe\r\n                    id=\"ytplayer\"\r\n                    type=\"text/html\"\r\n                    title=\"youtube video player\"\r\n                    src={`https://www.youtube.com/embed/${video.id}`}\r\n                    frameBorder=\"0\"\r\n                    allowFullScreen>\r\n                </iframe>\r\n            </div>\r\n            <h1 className={style.title}>{video.snippet.title}</h1>\r\n            <div className={style.channelInfo}>\r\n                <div className={style.youtuber}>\r\n                    <img src={video.thumbnailURL} className={style.thumbnail} alt=\"channel thumbnail\" />\r\n                    <h2 className={style.channelTitle}>{video.snippet.channelTitle}</h2>\r\n                </div>\r\n                <button type=\"button\" className={style.btn}>구독</button>\r\n            </div>\r\n            <p className={style.description}>{video.snippet.description}</p>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default VideoDetail;","import React, { useCallback, useEffect, useState } from 'react';\nimport style from './app.module.css';\nimport Header from './components/header/header';\nimport VideoList from './components/video_list/video_list';\nimport VideoDetail from './components/video_detail/video_detail';\nfunction App({ youtube }) {\n  const LIST = 'list';\n  const GRID = 'grid';\n  const [video, setVideo] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const onSelect = useCallback(item => {\n    setSelectedVideo(item);\n  }, []);\n  const onSearch = useCallback(query => {\n    youtube\n      .search(query)\n      .then(videos => {\n        youtube.getChannelInfo(videos)\n          .then(newVideos => {\n            setSelectedVideo(null);\n            setVideo(newVideos);\n          });\n      });\n  }, [youtube]);\n  useEffect(() => {\n    youtube\n      .getMostPopular()\n      .then(videos => {\n        youtube.getChannelInfo(videos)\n          .then(newVideos => {\n            setVideo(newVideos)\n          });\n      })\n  }, [youtube]);\n  return (\n    <section className={style.container}>\n      <Header onSearch={onSearch} />\n      <section className={style.videoContainer}>\n        {\n          selectedVideo && (\n            <div className={style.detail}>\n              <VideoDetail video={selectedVideo} />\n            </div>\n          )\n        }\n        <div className={style.list}>\n          <VideoList videos={video} onSelect={onSelect} display={selectedVideo ? LIST : GRID} />\n        </div>\n      </section>\n    </section>\n  );\n}\nexport default App;\n","class Youtube {\r\n    constructor(httpClient) {\r\n        this.httpClient = httpClient;\r\n    }\r\n    async getMostPopular() {\r\n        const response = await this.httpClient.get('/videos', {\r\n            params: {\r\n                part: 'snippet',\r\n                chart: 'mostPopular',\r\n                maxResults: 3,\r\n                regionCode: 'KR'\r\n            }\r\n        })\r\n        return response.data.items;\r\n    }\r\n    async search(query) {\r\n        const response = await this.httpClient.get('/search', {\r\n            params: {\r\n                part: 'snippet',\r\n                type: 'video',\r\n                maxResults: 3,\r\n                regionCode: 'KR',\r\n                q: query\r\n            }\r\n        })\r\n        return response.data.items.map(item => ({ ...item, id: item.id.videoId }));\r\n    }\r\n    async getChannelInfo(videos, thumbnailURLs = []) {\r\n        for (let i = 0; i < videos.length; i++) {\r\n            const { data: { items: [channelInfo] } } = await this.httpClient.get('/channels', {\r\n                params: {\r\n                    part: 'snippet',\r\n                    id: videos[i].snippet.channelId\r\n                }\r\n            })\r\n            const { snippet: { thumbnails: { default: { url } } } } = channelInfo;\r\n            thumbnailURLs.push(url);\r\n        }\r\n        return Promise.resolve(videos.map(item => {\r\n            return ({\r\n                ...item,\r\n                thumbnailURL: thumbnailURLs.shift()\r\n            })\r\n        }));\r\n    }\r\n}\r\nexport default Youtube;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport Youtube from './service/youtube.js';\nimport axios from 'axios';\n\nconst httpClient = axios.create({\n  baseURL: 'https://youtube.googleapis.com/youtube/v3',\n  params: { key: process.env.REACT_APP_YOUTUBE_API_KEY }\n});\n\nconst youtube = new Youtube(httpClient);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App youtube={youtube} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoContainer\":\"app_videoContainer__kvvz4\",\"detail\":\"app_detail__2sfD1\",\"list\":\"app_list__aI832\"};"],"sourceRoot":""}